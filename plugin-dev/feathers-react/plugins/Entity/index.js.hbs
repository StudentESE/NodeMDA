##output preserve {{@root.output}}/src/services/{{class.requireImportPath}}/index.js
'use strict';

const service = require('feathers-mongoose');
const Contact = require('./{{class.name}}-model');
const hooks = require('./hooks');

module.exports = function() {
  const app = this;

  const options = {
    Model: Contact,
    paginate: {
      default: 5,
      max: 25
    }
  };

  // Initialize our service with any options it requires
  app.use('{{class.expressServicePath}}', service(options));

  // Get our initialize service to that we can bind hooks
  const {{class.serviceVarName}} = app.service('{{class.expressServicePath}}');

  // Set up our before hooks
  {{class.serviceVarName}}.before(hooks.before);

  // Set up our after hooks
  {{class.serviceVarName}}.after(hooks.after);

  // Filter real time events to only be sent to the entity owner
  {{class.serviceVarName}}.filter(function(data, connection, hook) {

      if(!connection.user) {
        return false;
      }
{{#if class.isUserOwned}}

      if (connection.user._id !== data.ownerUserId) {
        return false;
      }
{{/if}}

      return data;
  });

};
