##output {{safePreserve class.name 'AccountService'}} {{@root.output}}/src/services/{{class.packageDirName}}/{{class.name}}/{{class.name}}Impl.js
'use strict';

const errors = require('feathers-errors');
{{#with class as |class|}}
class {{class.name}}Impl {

    constructor(app) {
    	this.app = app;
    }

{{#each dependentServices as |svc|}}
    get {{svc.serviceVarName}}() {
    	return this.app.service('{{svc.expressServicePath}}');
    }

{{/each}}
{{#each operations as |fn|}}
	{{fn.name}}(
     {{~#if fn.hasParameters~}}
       { 
    {{~#each fn.parameters as |param|}}
         {{~#unless @first}}, {{/unless}}{{param.name}}
    {{~/each~}}
         },
    {{~/if~}}
         feathersParams) {
        // TODO supply implementation for {{class.name}}.{{fn.name}}()
		// Return either a JSON object, or a Promise.
		throw new errors.NotImplemented('{{class.name}}.{{fn.name}}() not yet implemented.');
	}

{{/each}}
}

module.exports = {{class.name}}Impl;
{{/with}}
