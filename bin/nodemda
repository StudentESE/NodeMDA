#!/usr/bin/env node
'use strict';

var program = require('commander');
var NodeMDA = require('nodemda');


// var winston = require('winston');
// winston.level = 'debug';

program
   .version('1.0.0');



program
   .command('generate <modelFileName>')
   .alias("gen")
   .usage("nodemda generate [options] <modelFileName>")
   .description("Generate code from the specified model file")
   .option('-o, --output <outputDirectory>','The output directory')
   .option('-r, --reader <readerModuleName>','Name of a module that will act as the NodeMDA.Reader')
   .option('-p, --platform <platformName>','Name of the platform plugin to use')
   .action(function(fileName) {

                if (program.platform) {
                    NodeMDA.Options.platform = program.platform; 
				}
				else {
				    NodeMDA.Options.platform = "javascript-es6";
				}
				
				if (program.output) {
					NodeMDA.Options.output = program.output;				
				}
				
				if (program.reader) {
					NodeMDA.Meta.Reader = require(program.reader);			
				}
				else {
					NodeMDA.Meta.Reader = require('nodemda-staruml');			
				}
				
    			NodeMDA.gen(fileName);
			});

program
	.command('init')
    .description("Initialize current directory for project development")
    .option('-p, --platform <platformName>','Name of the platform plugin to use')
	.action(function() {
		console.log('TODO: Initialize the project by creating a model dir and copying model from the platform');
	});


program.parse(process.argv);


if (!process.argv.slice(2).length) {
   program.outputHelp();
}
